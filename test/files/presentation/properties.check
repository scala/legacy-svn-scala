reload: properties.scala

askTypeCompletion at properties.scala(29,33)
================================================================================
[response] aksTypeCompletion at (29,33)
retrieved 48 members
`method !=(x$1: Any)Boolean`
`method !=(x$1: AnyRef)Boolean`
`method ##()Int`
`method +(other: String)java.lang.String`
`method ->[B](y: B)(properties.Property[java.lang.String], B)`
`method ==(x$1: Any)Boolean`
`method ==(x$1: AnyRef)Boolean`
`method apply()java.lang.String`
`method asInstanceOf[T0]=> T0`
`method canEqual(that: Any)Boolean`
`method clone()java.lang.Object`
`method ensuring(cond: Boolean)properties.Property[java.lang.String]`
`method ensuring(cond: Boolean, msg: => Any)properties.Property[java.lang.String]`
`method ensuring(cond: properties.Property[java.lang.String] => Boolean)properties.Property[java.lang.String]`
`method ensuring(cond: properties.Property[java.lang.String] => Boolean, msg: => Any)properties.Property[java.lang.String]`
`method eq(x$1: AnyRef)Boolean`
`method equals(x$1: Any)Boolean`
`method finalize()Unit`
`method formatted(fmtstr: String)String`
`method get(newGetter: java.lang.String => java.lang.String)properties.Property[java.lang.String]`
`method hashCode()Int`
`method isInstanceOf[T0]=> Boolean`
`method ne(x$1: AnyRef)Boolean`
`method notify()Unit`
`method notifyAll()Unit`
`method productArity=> Int`
`method productElement(n: Int)Any`
`method productIterator=> Iterator[Any]`
`method productPrefix=> java.lang.String`
`method set(newSetter: java.lang.String => java.lang.String)properties.Property[java.lang.String]`
`method synchronized[T0](x$1: T0)T0`
`method toString()java.lang.String`
`method update(newValue: java.lang.String)Unit`
`method wait()Unit`
`method wait(x$1: Long)Unit`
`method wait(x$1: Long, x$2: Int)Unit`
`method →[B](y: B)(properties.Property[java.lang.String], B)`
`value initjava.lang.String`
`value selfAny`
`value xproperties.Property[java.lang.String]`
`variable getterjava.lang.String => java.lang.String`
`variable setterjava.lang.String => java.lang.String`
`variable valuejava.lang.String`
================================================================================

askTypeCompletion at properties.scala(29,67)
================================================================================
[response] aksTypeCompletion at (29,67)
retrieved 48 members
`method !=(x$1: Any)Boolean`
`method !=(x$1: AnyRef)Boolean`
`method ##()Int`
`method +(other: String)java.lang.String`
`method ->[B](y: B)(properties.Property[java.lang.String], B)`
`method ==(x$1: Any)Boolean`
`method ==(x$1: AnyRef)Boolean`
`method apply()java.lang.String`
`method asInstanceOf[T0]=> T0`
`method canEqual(that: Any)Boolean`
`method clone()java.lang.Object`
`method ensuring(cond: Boolean)properties.Property[java.lang.String]`
`method ensuring(cond: Boolean, msg: => Any)properties.Property[java.lang.String]`
`method ensuring(cond: properties.Property[java.lang.String] => Boolean)properties.Property[java.lang.String]`
`method ensuring(cond: properties.Property[java.lang.String] => Boolean, msg: => Any)properties.Property[java.lang.String]`
`method eq(x$1: AnyRef)Boolean`
`method equals(x$1: Any)Boolean`
`method finalize()Unit`
`method formatted(fmtstr: String)String`
`method get(newGetter: java.lang.String => java.lang.String)properties.Property[java.lang.String]`
`method hashCode()Int`
`method isInstanceOf[T0]=> Boolean`
`method ne(x$1: AnyRef)Boolean`
`method notify()Unit`
`method notifyAll()Unit`
`method productArity=> Int`
`method productElement(n: Int)Any`
`method productIterator=> Iterator[Any]`
`method productPrefix=> java.lang.String`
`method set(newSetter: java.lang.String => java.lang.String)properties.Property[java.lang.String]`
`method synchronized[T0](x$1: T0)T0`
`method toString()java.lang.String`
`method update(newValue: java.lang.String)Unit`
`method wait()Unit`
`method wait(x$1: Long)Unit`
`method wait(x$1: Long, x$2: Int)Unit`
`method →[B](y: B)(properties.Property[java.lang.String], B)`
`value initjava.lang.String`
`value selfAny`
`value xproperties.Property[java.lang.String]`
`variable getterjava.lang.String => java.lang.String`
`variable setterjava.lang.String => java.lang.String`
`variable valuejava.lang.String`
================================================================================

askTypeCompletion at properties.scala(45,10)
================================================================================
[response] aksTypeCompletion at (45,10)
retrieved 36 members
`method !=(x$1: Any)Boolean`
`method !=(x$1: AnyRef)Boolean`
`method ##()Int`
`method +(other: String)java.lang.String`
`method ->[B](y: B)(properties.User, B)`
`method ==(x$1: Any)Boolean`
`method ==(x$1: AnyRef)Boolean`
`method asInstanceOf[T0]=> T0`
`method clone()java.lang.Object`
`method ensuring(cond: Boolean)properties.User`
`method ensuring(cond: Boolean, msg: => Any)properties.User`
`method ensuring(cond: properties.User => Boolean)properties.User`
`method ensuring(cond: properties.User => Boolean, msg: => Any)properties.User`
`method eq(x$1: AnyRef)Boolean`
`method equals(x$1: Any)Boolean`
`method finalize()Unit`
`method formatted(fmtstr: String)String`
`method hashCode()Int`
`method isInstanceOf[T0]=> Boolean`
`method ne(x$1: AnyRef)Boolean`
`method notify()Unit`
`method notifyAll()Unit`
`method synchronized[T0](x$1: T0)T0`
`method toString()java.lang.String`
`method wait()Unit`
`method wait(x$1: Long)Unit`
`method wait(x$1: Long, x$2: Int)Unit`
`method →[B](y: B)(properties.User, B)`
`value firstnameproperties.Property[java.lang.String]`
`value lastnameproperties.Property[java.lang.String]`
`value selfAny`
`value xproperties.User`
================================================================================

askType at properties.scala(18,28)
================================================================================
[response] askTypeAt at (18,28)
def update(newValue: T): Unit = Property.this.value_=(Property.this.setter.apply(newValue))
================================================================================

askType at properties.scala(21,31)
================================================================================
[response] askTypeAt at (21,31)
def get(newGetter: T => T): properties.Property[T] = {
  Property.this.getter_=(newGetter);
  this
}
================================================================================
